section .data

    msg db "Enter 5 64 bit numbers : "
    msgLen equ $-msg
    
    pmsg db 10, "64 bit numbers are : "
    pmsgLen equ $-pmsg
    
; ---------------------------------------------------------

section .bss

    array resd 200
    counter resb 1
    
; ---------------------------------------------------------

%macro print 2
    mov rax, 1
    mov rdi, 1
    mov rsi, %1
    mov rdx, %2
    syscall
%endmacro

%macro exit 0
    mov rax, 60
    mov rdi, 0
    syscall
%endmacro

; ---------------------------------------------------------

section .text

    global _start
    
_start:

    print msg, msgLen
    
    mov byte[counter], 05
    mov rbx, 00
    
    loop1:
        mov rax, 0
        mov rdi, 0
        mov rsi, array
        mov rdx, 17h
        add rsi, rbx
        syscall
        mov rbx, 17h
        dec byte[counter]
        jnz loop1
        
    print pmsg, pmsgLen
    
    mov byte[counter], 05
    mov rbx, 00

    loop2:
        mov rax, 1
        mov rdi, 1
        mov rsi, array
        add rsi, rbx
        mov rdx, 17h
        syscall
        add rbx, 17h
        dec byte[counter]
        jnz loop2
    
    exit
    
; ---------------------------------------------------------