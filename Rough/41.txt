section .data

    msg db "Conversion of BCD to HEX & HEX to BCD"
    msgLen equ $-msg
    
    bmsg db 10, 10, "BCD to HEX"
    bmsgLen equ $-bmsg
    
    ebmsg db 10, "Equivalent Hec Number : "
    ebmsgLen equ $-ebmsg
    
; --------------------------------------------------------------------

section .bss

    buf resb 6
    ans resw 1
    charAns resb 16

; --------------------------------------------------------------------

%macro print 2
    mov rax, 1
    mov rdi, 1
    mov rsi, %1
    mov rdx, %2
    syscall
%endmacro

%macro read 2
    mov rax, 0
    mov rdi, 0
    mov rsi, %1
    mov rdx, %2
    syscall
%endmacro

%macro exit 0
    mov rax, 60
    mov rdi, 0
    syscall
%endmacro
    
; --------------------------------------------------------------------

section .text
    
    global _start
    
_start:
    
    print msg, msgLen
    call BCD2HEX
    
    exit

; --------------------------------------------------------------------

BCD2HEX:

    print bmsg, bmsgLen
    read buf, 6
    
    mov rsi, buf
    mov rax, 0
    mov rbx, 10
    mov rbp, 5
    
    next:
        mov cx, 0
        mul bx
        mov cl, [rsi]
        sub cl, 30h
        add ax, cx
        
        inc rsi
        dec rbp
        jnz next
        
    mov [ans], ax
    print ehmsg, ehmsgLen
    mov ax, [ans]
    call display
    
    ret
    
; --------------------------------------------------------------------

display:

    mov rbx, 16
    mov rcx, 4
    mov rsi, charAns + 3
    
    back:
        mov rdx, 0
        div rbx
        cmp dl, 09h
        jbe add30
        add dl, 07h
        
        add30:
            add dl, 30h
            
        mov [rsi], dl
        dec rsi
        dec rcx
        jnz back
        
    print charAns, 4
    
ret

; --------------------------------------------------------------------