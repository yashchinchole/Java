section .data

    msg db "String : "
    msgLen equ $-msg
    
    pmsg db 10, "Length of String : "
    pmsgLen equ $-pmsg
    
; ----------------------------------------------------

section .bss

    string resb 2000
    strinLen equ $-string
    count resb 1
    charAns resb 2
    
; ----------------------------------------------------

%macro print 2
    mov rax, 1
    mov rdi, 1
    mov rsi, %1
    mov rdx, %2
    syscall
%endmacro

%macro read 2
    mov rax, 0
    mov rdi, 0
    mov rsi, %1
    mov rdx, %2
    syscall
%endmacro

%macro exit 0
    mov rax, 60
    mov rdi, 0
    syscall
%endmacro

; ----------------------------------------------------

section .text

    global _start

_start:

    print msg, msgLen
    read string, strinLen
    mov [count], rax
    print pmsg, pmsgLen
    mov rax, [count]
    call display
    
    exit

; ----------------------------------------------------

display:
    mov rbx, 16
    mov rcx, 2
    mov rsi, charAns + 1
    
    back:
        mov rdx, 0
        div rbx
        cmp dl, 09h
        jbe add30
        add dl, 07h
        
        add30:
            add dl, 30h
            
        mov [rsi], dl
        dec rsi
        dec rcx
        jnz back
    
    print charAns, 2

ret
; ----------------------------------------------------